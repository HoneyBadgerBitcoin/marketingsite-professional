---
export interface Props {
  src: string;
  alt: string;
  class?: string;
  autoplay?: boolean;
  muted?: boolean;
  loop?: boolean;
}

const { src, alt, class: className = "", autoplay = true, muted = true, loop = true } = Astro.props;
const videoId = `video-${Math.random().toString(36).substr(2, 9)}`;
---

<div class={`relative group flex items-center ${className}`}>
  <video 
    id={videoId}
    class="w-full h-auto object-contain"
    autoplay={autoplay}
    muted={muted}
    loop={loop}
    playsinline
  >
    <source src={src} type="video/webm">
    <p>Your browser does not support the video tag. {alt}</p>
  </video>
  
  <!-- Play/Pause Button Overlay -->
  <button 
    id={`play-pause-${videoId}`}
    class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg"
    aria-label="Play/Pause video"
  >
    <div class="bg-white bg-opacity-90 rounded-full p-3 hover:bg-opacity-100 transition-all duration-200 shadow-lg">
      <svg id={`play-icon-${videoId}`} class="w-6 h-6 text-gray-800 ml-0.5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M8 5v14l11-7z"/>
      </svg>
      <svg id={`pause-icon-${videoId}`} class="w-6 h-6 text-gray-800 hidden" fill="currentColor" viewBox="0 0 24 24">
        <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
      </svg>
    </div>
  </button>
</div>

<script define:vars={{ videoId }}>
  document.addEventListener('DOMContentLoaded', function() {
    const video = document.getElementById(videoId);
    const playPauseBtn = document.getElementById(`play-pause-${videoId}`);
    const playIcon = document.getElementById(`play-icon-${videoId}`);
    const pauseIcon = document.getElementById(`pause-icon-${videoId}`);
    
    if (!video || !playPauseBtn || !playIcon || !pauseIcon) return;
    
    function updateButton() {
      if (video.paused) {
        playIcon.classList.remove('hidden');
        pauseIcon.classList.add('hidden');
      } else {
        playIcon.classList.add('hidden');
        pauseIcon.classList.remove('hidden');
      }
    }
    
    playPauseBtn.addEventListener('click', function() {
      if (video.paused) {
        video.play();
      } else {
        video.pause();
      }
    });
    
    video.addEventListener('play', updateButton);
    video.addEventListener('pause', updateButton);
    
    // Initial button state
    updateButton();
  });
</script>
